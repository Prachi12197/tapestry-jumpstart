<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- We need a doctype to allow us to use special characters like &nbsp; 
	 We use a "strict" DTD to make IE follow the alignment rules. -->
	 
<html xmlns:t="http://tapestry.apache.org/schema/tapestry_5_4.xsd" xmlns:p="tapestry:parameter">
<body class="container">
	<h3>Editable Grid For Update (1)</h3>

    <p class="alert alert-warning">
        Unfortunately, this example does not work in beta-26 due to a bug:  
        <a href="https://issues.apache.org/jira/browse/TAP5-2391">TAP5-2391</a>.
    </p>

	A table built with a Form around a Grid to allow update of persons.<br/><br/>
	
	The key difference from the Editable Grid example is that now we are dealing with existing entities, so we give the Grid a custom ValueEncoder.<br/>
	
	<div class="eg">
		<t:form t:id="personsEdit">
			<t:errors globalOnly="true"/>
			<t:grid source="persons" row="person" encoder="personEncoder" include="id,firstname,lastname,startdate">
				<p:firstNameCell>
					<t:textfield t:id="firstName" value="person.firstName" validate="maxlength=10"/>

					<!-- We shadow each output-only with a hidden field to enable redisplay of the list exactly as it was submitted. -->
					<t:hidden value="person.lastName"/>
					<t:hidden value="person.startDate" t:encoder="dateEncoder"/>

					<!-- We ensure version is submitted, to ensure optimistic locking. Optimistic locking is essential for this solution. -->
					<t:hidden value="person.version"/>
				</p:firstNameCell>
		 	</t:grid>
		 	<t:submit value="Save"/>
		 	<t:eventlink event="refresh" class="btn btn-default">Refresh</t:eventlink>
		</t:form>
	</div>

	<p>Features:</p>
	<ul>
	<li>If another process creates a person by the time you submit, we ignore it. The encoder ensures we target the submitted persons only.</li>
	<li>If another process updates a person by the time you submit, your update will be rejected by the business layer (optimistic locking exception).</li>
	<li>If another process deletes a person by the time you submit, we treat it as an error.</li>
	<li>On error, we redisplay the list with the same persons and values you submitted. Here's how:
		<ul>
		<li>Form doesn't submit output-only fields but it does submit hidden fields, so we shadow each output-only field with a Hidden.</li>
		</ul>
	</li>
	</ul>
	
	<p>Grid doesn't support JSR-303 validation, so, as in the previous example, we're demonstrating 3 workarounds:</p>
	<ul>
		<li>Client-side, we're validating field lengths with traditional Tapestry validators specified in the template.</li>
		<li>Server-side, we're invoking the validator for each field, which includes JSR-303 validation.</li>
		<li>Server-side, we're checking First Name is not <em>${BAD_NAME}</em>, which is a custom validation.</li>
	</ul>

	References: 
	<a href="http://tapestry.apache.org/5.4/apidocs/org/apache/tapestry5/corelib/components/Grid.html">Grid</a>, 
	<a href="http://tapestry.apache.org/5.4/apidocs/org/apache/tapestry5/ValueEncoder.html">ValueEncoder</a>, 
	<a href="http://tapestry.apache.org/forms-and-validation.html">Forms and Validation</a>.<br/><br/> 
	
	<t:pagelink page="Index">Home</t:pagelink><br/><br/>
	
	The source for IPersonFinderServiceLocal and @EJB is shown in the Session Beans and @EJB examples.<br/><br/>

	<t:tabgroup>
		<t:sourcecodetab src="/web/src/main/java/jumpstart/web/pages/examples/tables/EditableGridForUpdate1.tml"/>
		<t:sourcecodetab src="/web/src/main/java/jumpstart/web/pages/examples/tables/EditableGridForUpdate1.java"/>
		<t:sourcecodetab src="/web/src/main/resources/META-INF/assets/css/examples/plain.css"/>
		<t:sourcecodetab src="/web/src/main/java/jumpstart/web/commons/FieldCopy.java"/>
		<t:sourcecodetab src="/business/src/main/java/jumpstart/business/domain/person/Person.java"/>
	</t:tabgroup>
</body>
</html>