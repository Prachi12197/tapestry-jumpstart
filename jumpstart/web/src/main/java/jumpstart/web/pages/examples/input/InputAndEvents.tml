<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- We need a doctype to allow us to use special characters like &nbsp; 
	 We use a "strict" DTD to make IE follow the alignment rules. -->
	 
<html xmlns:t="http://tapestry.apache.org/schema/tapestry_5_4.xsd">
<body class="container">
	<h3>Input and Events</h3>

	To ask the server to <strong>output</strong> a page, send it a <strong>page render request</strong>. 
	PageLink does that, as we have seen in previous examples.<br/><br/>
	
	To tell the server about an <strong>event</strong> and any <strong>input</strong>, send it a 
	<strong>component event request</strong>. Form and EvenLink are two common components that do that, 
	as we will see in the next examples.<br/><br/>
	
	When a component event request reaches the server, Tapestry directs it to the <em>same page class and 
	component class that rendered</em> the page and component in the first place. <strong>This is great news!</strong> 
	It makes it very easy to understand and manage how a Tapestry application fits together.<br/><br/>  

	Some other components also send component event requests, such as GridPager. 
	And in fact almost every component can send a component event request when the component is 
	<strong>Ajax</strong>-enabled. We'll look at Ajax later.<br/><br/>

	References:	
	<a href="http://tapestry.apache.org/page-navigation.html">Page Navigation</a>, 
	<a href="http://tapestry.apache.org/component-events.html">Component Events</a>, 
	<a href="http://tapestry.apache.org/ajax-and-zones.html">Ajax</a>.<br/><br/>
	
	<t:pagelink t:page="Index">Home</t:pagelink><br/><br/>

	<t:tabGroup>
		<t:sourcecodetab src="/web/src/main/java/jumpstart/web/pages/examples/input/InputAndEvents.tml"/>
		<t:sourcecodetab src="/web/src/main/java/jumpstart/web/pages/examples/input/InputAndEvents.java"/>
	</t:tabGroup>
</body>
</html>