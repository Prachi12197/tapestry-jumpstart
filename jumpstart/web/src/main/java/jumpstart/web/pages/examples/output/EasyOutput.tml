<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- We need a doctype to allow us to use special characters like &nbsp; 
	 We use a "strict" DTD to make IE follow the alignment rules. -->
	 
<html xmlns:t="http://tapestry.apache.org/schema/tapestry_5_3.xsd">
<head>
	<link rel="stylesheet" type="text/css" href="${context:css/examples/examples.css}"/>
</head>
<body>
	<h1>Easy Output (Using BeanDisplay)</h1>
	
	Tapestry has a really quick and easy way to output a bean: the <strong>BeanDisplay</strong> component. <br/><br/>
	
	Here is BeanDisplay showing us Person 1 from the database. 
	
	<div class="eg">
		<t:beandisplay object="person"/>
	</div>
	
	Person is a JPA Entity Bean, retrieved from the database by PersonFinderService, which is an EJB3 Session Bean.<br/><br/>
	
	BeanDisplay is great for rapid prototyping, but it can be used for more than that because its parameters 
	let you exclude fields, include fields, reorder fields, etc. Its styling can be overridden with CSS.<br/><br/> 
	
	References: 
	<a href="http://tapestry.apache.org/5.3/apidocs/org/apache/tapestry5/corelib/components/BeanDisplay.html">BeanDisplay</a>,
	<a href="http://tapestry.apache.org/beaneditform-guide.html">Using BeanEditForm (sic)</a>.<br/><br/>
	
	<t:pagelink t:page="Index" href="#">Home</t:pagelink><br/><br/>
	
	The source for PersonFinderService, @EJB handling, etc. is shown in the @EJB example.<br/><br/>

	<t:sourcecodedisplay src="/web/src/main/java/jumpstart/web/pages/examples/output/EasyOutput.tml"/>
	<t:sourcecodedisplay src="/web/src/main/java/jumpstart/web/pages/examples/output/EasyOutput.java"/>
	<t:sourcecodedisplay src="/web/src/main/java/jumpstart/web/css/examples/examples.css"/>
	<t:sourcecodedisplay src="/business/src/main/java/jumpstart/business/domain/person/Person.java"/>
	<t:sourcecodedisplay src="/business/src/main/java/jumpstart/business/domain/person/Regions.java"/>
</body>
</html>